{"version":3,"file":"static/js/5421.f2a56a32.chunk.js","mappings":"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","sources":["components/common/CustomCInputGroup.js","store/meta/select.js","views/accounts/FilterTable.js","../node_modules/@coreui/icons/js/free/cil-filter.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  CFormFeedback,\n  CFormLabel,\n  CFormInput,\n  CFormTextarea,\n  CCol,\n  CFormSelect,\n  CInputGroup,\n  CButton,\n} from \"@coreui/react\";\n\nimport CIcon from \"@coreui/icons-react\";\nimport { cilPlus } from \"@coreui/icons\";\n\n// Custom form input group component\nexport function CustomCFormInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\n// Custom form input with add button group component\nexport function CustomCFormAddInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n  onAddInputBtnPressed,\n  addListName,\n  addBtnLabel = \"Add\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CInputGroup>\n          <CFormInput\n            type={type}\n            className={`!bg-white ${inputClassName}`}\n            readOnly={readOnly}\n            id={name}\n            name={name}\n            onChange={onChange}\n            // required={required}\n            invalid={error ? true : false}\n            placeholder={placeholder}\n            multiple={multiple}\n            aria-describedby=\"button-addon2\"\n          />\n          <CButton\n            name={addListName}\n            type=\"button\"\n            color=\"secondary\"\n            variant=\"outline\"\n            id=\"button-addon2\"\n            onClick={onAddInputBtnPressed}\n          >\n            {/* <CIcon icon={cilPlus} size=\"sm\" className=\"mx-1\"/> */}\n            {addBtnLabel}\n          </CButton>\n        </CInputGroup>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormTextAreaGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormTextarea\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          rows=\"4\"\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormFilesGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"file\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormSelectGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  mdSize = 12,\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n  options,\n  value,\n  defaultValue,\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormSelect\n           className={`!bg-white ${inputClassName}`}\n          name={name}\n          defaultValue={defaultValue}\n          onChange={onChange}\n          aria-label=\"Default select example\"\n          invalid={error ? true : false}\n        >\n          <option>Open this select menu</option>\n          {options.map((option, index) => (\n            <option key={index} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </CFormSelect>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n","import { createDraftSafeSelector } from \"@reduxjs/toolkit\";\n\nexport const selectBranchNames = createDraftSafeSelector(\n  (state) => state.meta,\n  (meta) => meta.branchNames\n);\n\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton } from \"@coreui/react\";\nimport { selectBranchNames } from \"../../store/meta/select\";\nimport { thunks } from \"../../store/\";\n\nimport { cilFilter } from \"@coreui/icons\";\n\nimport { CustomCFormSelectGroup } from \"src/components/common/CustomCInputGroup\";\n\nconst FilterTable = ({\n  filterData,\n  filterErrors,\n  handleFilterChange,\n  handleFilterSubmit,\n  bsAccounts,\n  handleClearFilter,\n}) => {\n  const dispatch = useDispatch();\n  const [showFilterData, setShowFilterData] = useState(false);\n\n  const [branchNameOptions, setBranchNameOptions] = useState([]);\n\n  const branchNames = useSelector(selectBranchNames);\n\n  useEffect(() => {\n    dispatch(thunks.meta.setBranchNames());\n\n    if (branchNames) {\n      const branchNameOptions = branchNames.map((branchName) => ({\n        value: branchName.name,\n        label: branchName.name,\n      }));\n      setBranchNameOptions(branchNameOptions);\n    }\n  }, [branchNames]);\n\n  return (\n    <>\n      <div className=\"mb-4 text-sm\">\n        <div className=\"grid justify-end text-sm\">\n          <CButton\n            color=\"info\"\n            variant=\"outline\"\n            onClick={() => setShowFilterData(!showFilterData)}\n          >\n            <CIcon icon={cilFilter} />{\" \"}\n            <span className=\"text-sm\">Show Filters</span>\n          </CButton>\n        </div>\n\n        <div className=\"row g-3 text-sm\" hidden={!showFilterData}>\n          <CustomCFormSelectGroup\n            inputClassName=\"text-sm\"\n            hidden={!bsAccounts}\n            label=\"Account Status\"\n            name=\"status\"\n            value={filterData.status}\n            onChange={handleFilterChange}\n            error={filterErrors.status}\n            uppercase={true}\n            required={false}\n            mdSize={4}\n            options={[\n              { value: \"Active\", label: \"Active\" },\n              { value: \"Inactive\", label: \"Inactive\" },\n            ]}\n          />\n          <CustomCFormSelectGroup\n            inputClassName=\"text-sm\"\n            hidden={!bsAccounts}\n            label=\"Access Level\"\n            name=\"accountType\"\n            value={filterData.accountType}\n            onChange={handleFilterChange}\n            error={filterErrors.accountType}\n            uppercase={true}\n            required={false}\n            mdSize={4}\n            options={[\n              { value: \"bsEditor\", label: \"Editor\" },\n              { value: \"bsViewer\", label: \"Viewer\" },\n            ]}\n          />\n          <CustomCFormSelectGroup\n            inputClassName=\"text-sm\"\n            hidden={!bsAccounts}\n            label=\"Branch Name\"\n            name=\"branchName\"\n            value={filterData.branchName}\n            onChange={handleFilterChange}\n            error={filterErrors.branchName}\n            uppercase={true}\n            required={false}\n            mdSize={4}\n            options={branchNameOptions}\n          />\n        </div>\n        <div className=\"flex flex-row justify-end\">\n          <div className=\"felx-row px-4 justify-end\" hidden={!showFilterData}>\n            <CButton\n              color=\"primary\"\n              variant=\"outline\"\n              onClick={handleFilterSubmit}\n            >\n              <CIcon icon={cilFilter} /> <span className=\"text-sm\">Filter</span>\n            </CButton>\n          </div>\n          <div className=\"felx-row justify-end\" hidden={!showFilterData}>\n            <CButton\n              color=\"primary\"\n              variant=\"outline\"\n              onClick={handleClearFilter}\n            >\n              <CIcon icon={cilFilter} />{\" \"}\n              <span className=\"text-sm\">Clear Filters</span>\n            </CButton>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default FilterTable;\n","export const cilFilter = [\"512 512\",\"<path fill='var(--ci-primary-color, currentColor)' d='M238.627,496H192V253.828l-168-200V16H480V53.612l-160,200V414.627ZM224,464h1.373L288,401.373V242.388L443.51,48H60.9L224,242.172Z' class='ci-primary'/>\"]"],"names":["CustomCFormInputGroup","label","name","placeholder","value","onChange","error","readOnly","mdSize","type","required","multiple","uppercase","inputClassName","className","xs","md","htmlFor","id","invalid","CustomCFormAddInputGroup","onAddInputBtnPressed","addListName","addBtnLabel","color","variant","onClick","CustomCFormTextAreaGroup","rows","CustomCFormFilesGroup","CustomCFormSelectGroup","options","defaultValue","map","option","index","selectBranchNames","createDraftSafeSelector","state","meta","branchNames","filterData","filterErrors","handleFilterChange","handleFilterSubmit","bsAccounts","handleClearFilter","dispatch","useDispatch","useState","showFilterData","setShowFilterData","branchNameOptions","setBranchNameOptions","useSelector","useEffect","thunks","branchName","icon","cilFilter","hidden","status","accountType"],"sourceRoot":""}