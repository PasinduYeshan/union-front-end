{"version":3,"file":"static/js/1128.4eb403ef.chunk.js","mappings":"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","sources":["components/common/CustomCInputGroup.js","views/pages/login/LoginSection.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  CFormFeedback,\n  CFormLabel,\n  CFormInput,\n  CFormTextarea,\n  CCol,\n  CFormSelect,\n  CInputGroup,\n  CButton,\n} from \"@coreui/react\";\n\nimport CIcon from \"@coreui/icons-react\";\nimport { cilPlus } from \"@coreui/icons\";\n\n// Custom form input group component\nexport function CustomCFormInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\n// Custom form input with add button group component\nexport function CustomCFormAddInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n  onAddInputBtnPressed,\n  addListName,\n  addBtnLabel = \"Add\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CInputGroup>\n          <CFormInput\n            type={type}\n            className={`!bg-white ${inputClassName}`}\n            readOnly={readOnly}\n            id={name}\n            name={name}\n            onChange={onChange}\n            // required={required}\n            invalid={error ? true : false}\n            placeholder={placeholder}\n            multiple={multiple}\n            aria-describedby=\"button-addon2\"\n          />\n          <CButton\n            name={addListName}\n            type=\"button\"\n            color=\"secondary\"\n            variant=\"outline\"\n            id=\"button-addon2\"\n            onClick={onAddInputBtnPressed}\n          >\n            {/* <CIcon icon={cilPlus} size=\"sm\" className=\"mx-1\"/> */}\n            {addBtnLabel}\n          </CButton>\n        </CInputGroup>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormTextAreaGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormTextarea\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          rows=\"4\"\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormFilesGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"file\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormSelectGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  mdSize = 12,\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n  options,\n  value,\n  defaultValue,\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormSelect\n           className={`!bg-white ${inputClassName}`}\n          name={name}\n          defaultValue={defaultValue}\n          onChange={onChange}\n          aria-label=\"Default select example\"\n          invalid={error ? true : false}\n        >\n          <option>Open this select menu</option>\n          {options.map((option, index) => (\n            <option key={index} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </CFormSelect>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Joi from \"joi\";\nimport { LockClosedIcon } from \"@heroicons/react/solid\";\n\nimport { CCol } from \"@coreui/react\";\n\nimport { CustomCFormInputGroup } from \"../../../components/common/CustomCInputGroup\";\n\nexport default function LoginSection(props) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [rememberMe, setRememberMe] = useState(false);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Joi validation schema\n  const schema = Joi.object({\n    username: Joi.string().required().label(\"User Name\"),\n    password: Joi.string().required().label(\"Password\"),\n  });\n\n  /**\n   * Handlers\n   */\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    delete formErrors[name];\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleRememberMe = (e) => {\n    setRememberMe(!rememberMe);\n  };\n\n  const forgotPassword = () => {};\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    const { error, value } = schema.validate(formData, { abortEarly: false });\n    if (!error) {\n      //Login loogic\n      history.replace(\"/office/dashboard\");\n    } else {\n      const errors = {};\n      for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n      }\n      setFormErrors(errors);\n    }\n  };\n  return (\n    <>\n      <div className=\"container h-500 mb-16 sm:mb-16 md:mb-16\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 align-middle h-full w-full\">\n          <div className=\"hidden md:block align-middle m-10\">\n            <img\n              src=\"images/login.svg\"\n              className=\" object-cover w-full h-full \"\n            />\n          </div>\n          <div className=\"flex items-center justify-center align-content-center px-4 sm:px-6 lg:px-8 \">\n            <div className=\"max-w-md w-full space-y-8\">\n              <div>\n                {/* <img\n                  className=\"mx-auto h-12 w-auto\"\n                  src=\"images/logo.png\"\n                  alt=\"Workflow\"\n                /> */}\n                <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n                  Sign in to your account\n                </h2>\n              </div>\n              <form\n                className=\"mt-8 space-y-6\"\n                onSubmit={handleLogin}\n                method=\"POST\"\n              >\n                <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                <div className=\"rounded-md \">\n                  <div className=\"py-2\">\n                    <CustomCFormInputGroup\n                      label=\"Username\"\n                      name=\"username\"\n                      value={formData.username}\n                      onChange={handleChange}\n                      error={formErrors.username}\n                    />\n                  </div>\n                  <div className=\"py-2\">\n                    <CustomCFormInputGroup\n                      label=\"Password\"\n                      name=\"password\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      error={formErrors.password}\n                      type=\"password\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <input\n                      id=\"remember-me\"\n                      name=\"remember-me\"\n                      type=\"checkbox\"\n                      className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                      onChange={handleRememberMe}\n                      value={rememberMe}\n                    />\n                    <label\n                      htmlFor=\"remember-me\"\n                      className=\"ml-2 block text-sm text-gray-900\"\n                    >\n                      Remember me\n                    </label>\n                  </div>\n\n                  <div className=\"text-sm\">\n                    <button\n                      className=\"font-medium text-indigo-600 hover:text-indigo-500\"\n                      onClick={forgotPassword}\n                    >\n                      Forgot your password?\n                    </button>\n                  </div>\n                </div>\n\n                <div>\n                  <button\n                    onClick={handleLogin}\n                    type=\"submit\"\n                    className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                  >\n                    <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                      <LockClosedIcon\n                        className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400\"\n                        aria-hidden=\"true\"\n                      />\n                    </span>\n                    Sign in\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>{\" \"}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"names":["CustomCFormInputGroup","label","name","placeholder","value","onChange","error","readOnly","mdSize","type","required","multiple","uppercase","inputClassName","className","xs","md","htmlFor","id","invalid","CustomCFormAddInputGroup","onAddInputBtnPressed","addListName","addBtnLabel","color","variant","onClick","CustomCFormTextAreaGroup","rows","CustomCFormFilesGroup","CustomCFormSelectGroup","options","defaultValue","map","option","index","LoginSection","props","history","useHistory","useState","username","password","formData","setFormData","rememberMe","setRememberMe","formErrors","setFormErrors","schema","Joi","handleChange","e","target","handleLogin","preventDefault","validate","abortEarly","errors","details","item","path","message","replace","src","onSubmit","method"],"sourceRoot":""}