{"version":3,"file":"static/js/3124.611ba86b.chunk.js","mappings":"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","sources":["../node_modules/@headlessui/react/src/components/keyboard.ts","../node_modules/@headlessui/react/src/hooks/use-sync-refs.ts","../node_modules/@headlessui/react/src/utils/bugs.ts","../node_modules/@headlessui/react/src/utils/focus-management.ts","../node_modules/@headlessui/react/src/hooks/use-window-event.ts","../node_modules/@headlessui/react/src/components/popover/popover.tsx","../node_modules/@headlessui/react/src/hooks/use-resolve-button-type.ts","../node_modules/@headlessui/react/src/components/transitions/utils/transition.ts","../node_modules/@headlessui/react/src/utils/disposables.ts","../node_modules/@headlessui/react/src/utils/once.ts","../node_modules/@headlessui/react/src/components/transitions/transition.tsx","../node_modules/@headlessui/react/src/hooks/use-is-mounted.ts","../node_modules/@headlessui/react/src/hooks/use-is-initial-render.ts","../node_modules/@headlessui/react/src/hooks/use-id.ts","../node_modules/@headlessui/react/src/hooks/use-iso-morphic-effect.ts","../node_modules/@headlessui/react/src/hooks/use-server-handoff-complete.ts","../node_modules/@headlessui/react/src/internal/open-closed.tsx","../node_modules/@headlessui/react/src/utils/match.ts","../node_modules/@headlessui/react/src/utils/render.ts","../node_modules/@heroicons/react/outline/esm/MenuIcon.js","../node_modules/@heroicons/react/outline/esm/XIcon.js"],"sourcesContent":["// TODO: This must already exist somewhere, right? 🤔\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","import { useRef, useEffect, useCallback } from 'react'\n\nexport function useSyncRefs<TType>(\n  ...refs: (React.MutableRefObject<TType | null> | ((instance: TType) => void) | null)[]\n) {\n  let cache = useRef(refs)\n\n  useEffect(() => {\n    cache.current = refs\n  }, [refs])\n\n  return useCallback(\n    (value: TType) => {\n      for (let ref of cache.current) {\n        if (ref == null) continue\n        if (typeof ref === 'function') ref(value)\n        else ref.current = value\n      }\n    },\n    [cache]\n  )\n}\n","// See: https://github.com/facebook/react/issues/7711\n// See: https://github.com/facebook/react/pull/20612\n// See: https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#concept-fe-disabled (2.)\nexport function isDisabledReactIssue7711(element: Element): boolean {\n  let parent = element.parentElement\n  let legend = null\n\n  while (parent && !(parent instanceof HTMLFieldSetElement)) {\n    if (parent instanceof HTMLLegendElement) legend = parent\n    parent = parent.parentElement\n  }\n\n  let isParentDisabled = parent?.getAttribute('disabled') === '' ?? false\n  if (isParentDisabled && isFirstLegend(legend)) return false\n\n  return isParentDisabled\n}\n\nfunction isFirstLegend(element: HTMLLegendElement | null): boolean {\n  if (!element) return false\n\n  let previous = element.previousElementSibling\n\n  while (previous !== null) {\n    if (previous instanceof HTMLLegendElement) return false\n    previous = previous.previousElementSibling\n  }\n\n  return true\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  /** Something went wrong while trying to focus. */\n  Error,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N+1` where `N` is the last index in the array, then we overflow. */\n  Overflow,\n\n  /** Focus was successful. */\n  Success,\n\n  /** When `Focus.WrapAround` is enabled, going from position `N` to `N-1` where `N` is the first index in the array, then we underflow. */\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container)\n    ? container.slice().sort((a, b) => {\n        let position = a.compareDocumentPosition(b)\n\n        if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n        if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n        return 0\n      })\n    : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import { useEffect, useRef } from 'react'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  let listenerRef = useRef(listener)\n  listenerRef.current = listener\n\n  useEffect(() => {\n    function handler(event: WindowEventMap[TType]) {\n      listenerRef.current.call(window, event)\n    }\n\n    window.addEventListener(type, handler, options)\n    return () => window.removeEventListener(type, handler, options)\n  }, [type, options])\n}\n","import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n\n  // Types\n  ContextType,\n  Dispatch,\n  ElementType,\n  KeyboardEvent as ReactKeyboardEvent,\n  MouseEvent as ReactMouseEvent,\n  Ref,\n  MutableRefObject,\n} from 'react'\n\nimport { Props } from '../../types'\nimport { match } from '../../utils/match'\nimport { forwardRefWithAs, render, Features, PropsForFeatures } from '../../utils/render'\nimport { useSyncRefs } from '../../hooks/use-sync-refs'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../keyboard'\nimport { isDisabledReactIssue7711 } from '../../utils/bugs'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  popoverState: PopoverStates\n\n  button: HTMLElement | null\n  buttonId: string\n  panel: HTMLElement | null\n  panelId: string\n}\n\nenum ActionTypes {\n  TogglePopover,\n  ClosePopover,\n\n  SetButton,\n  SetButtonId,\n  SetPanel,\n  SetPanelId,\n}\n\ntype Actions =\n  | { type: ActionTypes.TogglePopover }\n  | { type: ActionTypes.ClosePopover }\n  | { type: ActionTypes.SetButton; button: HTMLElement | null }\n  | { type: ActionTypes.SetButtonId; buttonId: string }\n  | { type: ActionTypes.SetPanel; panel: HTMLElement | null }\n  | { type: ActionTypes.SetPanelId; panelId: string }\n\nlet reducers: {\n  [P in ActionTypes]: (\n    state: StateDefinition,\n    action: Extract<Actions, { type: P }>\n  ) => StateDefinition\n} = {\n  [ActionTypes.TogglePopover]: state => ({\n    ...state,\n    popoverState: match(state.popoverState, {\n      [PopoverStates.Open]: PopoverStates.Closed,\n      [PopoverStates.Closed]: PopoverStates.Open,\n    }),\n  }),\n  [ActionTypes.ClosePopover](state) {\n    if (state.popoverState === PopoverStates.Closed) return state\n    return { ...state, popoverState: PopoverStates.Closed }\n  },\n  [ActionTypes.SetButton](state, action) {\n    if (state.button === action.button) return state\n    return { ...state, button: action.button }\n  },\n  [ActionTypes.SetButtonId](state, action) {\n    if (state.buttonId === action.buttonId) return state\n    return { ...state, buttonId: action.buttonId }\n  },\n  [ActionTypes.SetPanel](state, action) {\n    if (state.panel === action.panel) return state\n    return { ...state, panel: action.panel }\n  },\n  [ActionTypes.SetPanelId](state, action) {\n    if (state.panelId === action.panelId) return state\n    return { ...state, panelId: action.panelId }\n  },\n}\n\nlet PopoverContext = createContext<[StateDefinition, Dispatch<Actions>] | null>(null)\nPopoverContext.displayName = 'PopoverContext'\n\nfunction usePopoverContext(component: string) {\n  let context = useContext(PopoverContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverAPIContext = createContext<{\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n} | null>(null)\nPopoverAPIContext.displayName = 'PopoverAPIContext'\n\nfunction usePopoverAPIContext(component: string) {\n  let context = useContext(PopoverAPIContext)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverAPIContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = createContext<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>(null)\nPopoverGroupContext.displayName = 'PopoverGroupContext'\n\nfunction usePopoverGroupContext() {\n  return useContext(PopoverGroupContext)\n}\n\nlet PopoverPanelContext = createContext<string | null>(null)\nPopoverPanelContext.displayName = 'PopoverPanelContext'\n\nfunction usePopoverPanelContext() {\n  return useContext(PopoverPanelContext)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\nfunction stateReducer(state: StateDefinition, action: Actions) {\n  return match(action.type, reducers, state, action)\n}\n\n// ---\n\nlet DEFAULT_POPOVER_TAG = 'div' as const\ninterface PopoverRenderPropArg {\n  open: boolean\n  close(focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>): void\n}\n\nexport function Popover<TTag extends ElementType = typeof DEFAULT_POPOVER_TAG>(\n  props: Props<TTag, PopoverRenderPropArg>\n) {\n  let buttonId = `headlessui-popover-button-${useId()}`\n  let panelId = `headlessui-popover-panel-${useId()}`\n\n  let reducerBag = useReducer(stateReducer, {\n    popoverState: PopoverStates.Closed,\n    button: null,\n    buttonId,\n    panel: null,\n    panelId,\n  } as StateDefinition)\n  let [{ popoverState, button, panel }, dispatch] = reducerBag\n\n  useEffect(() => dispatch({ type: ActionTypes.SetButtonId, buttonId }), [buttonId, dispatch])\n  useEffect(() => dispatch({ type: ActionTypes.SetPanelId, panelId }), [panelId, dispatch])\n\n  let registerBag = useMemo(\n    () => ({ buttonId, panelId, close: () => dispatch({ type: ActionTypes.ClosePopover }) }),\n    [buttonId, panelId, dispatch]\n  )\n\n  let groupContext = usePopoverGroupContext()\n  let registerPopover = groupContext?.registerPopover\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    return (\n      groupContext?.isFocusWithinPopoverGroup() ??\n      (button?.contains(document.activeElement) || panel?.contains(document.activeElement))\n    )\n  }, [groupContext, button, panel])\n\n  useEffect(() => registerPopover?.(registerBag), [registerPopover, registerBag])\n\n  // Handle focus out\n  useWindowEvent(\n    'focus',\n    () => {\n      if (popoverState !== PopoverStates.Open) return\n      if (isFocusWithinPopoverGroup()) return\n      if (!button) return\n      if (!panel) return\n\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  // Handle outside click\n  useWindowEvent('mousedown', event => {\n    let target = event.target as HTMLElement\n\n    if (popoverState !== PopoverStates.Open) return\n\n    if (button?.contains(target)) return\n    if (panel?.contains(target)) return\n\n    dispatch({ type: ActionTypes.ClosePopover })\n\n    if (!isFocusableElement(target, FocusableMode.Loose)) {\n      event.preventDefault()\n      button?.focus()\n    }\n  })\n\n  let close = useCallback(\n    (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => {\n      dispatch({ type: ActionTypes.ClosePopover })\n\n      let restoreElement = (() => {\n        if (!focusableElement) return button\n        if (focusableElement instanceof HTMLElement) return focusableElement\n        if (focusableElement.current instanceof HTMLElement) return focusableElement.current\n\n        return button\n      })()\n\n      restoreElement?.focus()\n    },\n    [dispatch, button]\n  )\n\n  let api = useMemo<ContextType<typeof PopoverAPIContext>>(() => ({ close }), [close])\n\n  let slot = useMemo<PopoverRenderPropArg>(\n    () => ({ open: popoverState === PopoverStates.Open, close }),\n    [popoverState, close]\n  )\n\n  return (\n    <PopoverContext.Provider value={reducerBag}>\n      <PopoverAPIContext.Provider value={api}>\n        <OpenClosedProvider\n          value={match(popoverState, {\n            [PopoverStates.Open]: State.Open,\n            [PopoverStates.Closed]: State.Closed,\n          })}\n        >\n          {render({\n            props,\n            slot,\n            defaultTag: DEFAULT_POPOVER_TAG,\n            name: 'Popover',\n          })}\n        </OpenClosedProvider>\n      </PopoverAPIContext.Provider>\n    </PopoverContext.Provider>\n  )\n}\n\n// ---\n\nlet DEFAULT_BUTTON_TAG = 'button' as const\ninterface ButtonRenderPropArg {\n  open: boolean\n}\ntype ButtonPropsWeControl =\n  | 'id'\n  | 'type'\n  | 'aria-expanded'\n  | 'aria-controls'\n  | 'onKeyDown'\n  | 'onClick'\n\nlet Button = forwardRefWithAs(function Button<TTag extends ElementType = typeof DEFAULT_BUTTON_TAG>(\n  props: Props<TTag, ButtonRenderPropArg, ButtonPropsWeControl>,\n  ref: Ref<HTMLButtonElement>\n) {\n  let [state, dispatch] = usePopoverContext([Popover.name, Button.name].join('.'))\n  let internalButtonRef = useRef<HTMLButtonElement | null>(null)\n\n  let groupContext = usePopoverGroupContext()\n  let closeOthers = groupContext?.closeOthers\n\n  let panelContext = usePopoverPanelContext()\n  let isWithinPanel = panelContext === null ? false : panelContext === state.panelId\n\n  let buttonRef = useSyncRefs(\n    internalButtonRef,\n    ref,\n    isWithinPanel ? null : button => dispatch({ type: ActionTypes.SetButton, button })\n  )\n  let withinPanelButtonRef = useSyncRefs(internalButtonRef, ref)\n\n  // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n  let activeElementRef = useRef<Element | null>(null)\n  let previousActiveElementRef = useRef<Element | null>(\n    typeof window === 'undefined' ? null : document.activeElement\n  )\n  useWindowEvent(\n    'focus',\n    () => {\n      previousActiveElementRef.current = activeElementRef.current\n      activeElementRef.current = document.activeElement\n    },\n    true\n  )\n\n  let handleKeyDown = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) {\n        if (state.popoverState === PopoverStates.Closed) return\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ClosePopover })\n            state.button?.focus() // Re-focus the original opening Button\n            break\n        }\n      } else {\n        switch (event.key) {\n          case Keys.Space:\n          case Keys.Enter:\n            event.preventDefault() // Prevent triggering a *click* event\n            event.stopPropagation()\n            if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n            dispatch({ type: ActionTypes.TogglePopover })\n            break\n\n          case Keys.Escape:\n            if (state.popoverState !== PopoverStates.Open) return closeOthers?.(state.buttonId)\n            if (!internalButtonRef.current) return\n            if (!internalButtonRef.current.contains(document.activeElement)) return\n            event.preventDefault()\n            event.stopPropagation()\n            dispatch({ type: ActionTypes.ClosePopover })\n            break\n\n          case Keys.Tab:\n            if (state.popoverState !== PopoverStates.Open) return\n            if (!state.panel) return\n            if (!state.button) return\n\n            // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n            if (event.shiftKey) {\n              // Check if the last focused element exists, and check that it is not inside button or panel itself\n              if (!previousActiveElementRef.current) return\n              if (state.button?.contains(previousActiveElementRef.current)) return\n              if (state.panel.contains(previousActiveElementRef.current)) return\n\n              // Check if the last focused element is *after* the button in the DOM\n              let focusableElements = getFocusableElements()\n              let previousIdx = focusableElements.indexOf(\n                previousActiveElementRef.current as HTMLElement\n              )\n              let buttonIdx = focusableElements.indexOf(state.button)\n              if (buttonIdx > previousIdx) return\n\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.Last)\n            } else {\n              event.preventDefault()\n              event.stopPropagation()\n\n              focusIn(state.panel, Focus.First)\n            }\n\n            break\n        }\n      }\n    },\n    [\n      dispatch,\n      state.popoverState,\n      state.buttonId,\n      state.button,\n      state.panel,\n      internalButtonRef,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let handleKeyUp = useCallback(\n    (event: ReactKeyboardEvent<HTMLButtonElement>) => {\n      if (isWithinPanel) return\n      if (event.key === Keys.Space) {\n        // Required for firefox, event.preventDefault() in handleKeyDown for\n        // the Space key doesn't cancel the handleKeyUp, which in turn\n        // triggers a *click*.\n        event.preventDefault()\n      }\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!state.panel) return\n      if (!state.button) return\n\n      // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n      switch (event.key) {\n        case Keys.Tab:\n          // Check if the last focused element exists, and check that it is not inside button or panel itself\n          if (!previousActiveElementRef.current) return\n          if (state.button?.contains(previousActiveElementRef.current)) return\n          if (state.panel.contains(previousActiveElementRef.current)) return\n\n          // Check if the last focused element is *after* the button in the DOM\n          let focusableElements = getFocusableElements()\n          let previousIdx = focusableElements.indexOf(\n            previousActiveElementRef.current as HTMLElement\n          )\n          let buttonIdx = focusableElements.indexOf(state.button)\n          if (buttonIdx > previousIdx) return\n\n          event.preventDefault()\n          event.stopPropagation()\n          focusIn(state.panel, Focus.Last)\n          break\n      }\n    },\n    [state.popoverState, state.panel, state.button, isWithinPanel]\n  )\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return\n      if (props.disabled) return\n      if (isWithinPanel) {\n        dispatch({ type: ActionTypes.ClosePopover })\n        state.button?.focus() // Re-focus the original opening Button\n      } else {\n        if (state.popoverState === PopoverStates.Closed) closeOthers?.(state.buttonId)\n        state.button?.focus()\n        dispatch({ type: ActionTypes.TogglePopover })\n      }\n    },\n    [\n      dispatch,\n      state.button,\n      state.popoverState,\n      state.buttonId,\n      props.disabled,\n      closeOthers,\n      isWithinPanel,\n    ]\n  )\n\n  let slot = useMemo<ButtonRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open }),\n    [state]\n  )\n\n  let type = useResolveButtonType(props, internalButtonRef)\n  let passthroughProps = props\n  let propsWeControl = isWithinPanel\n    ? {\n        ref: withinPanelButtonRef,\n        type,\n        onKeyDown: handleKeyDown,\n        onClick: handleClick,\n      }\n    : {\n        ref: buttonRef,\n        id: state.buttonId,\n        type,\n        'aria-expanded': props.disabled ? undefined : state.popoverState === PopoverStates.Open,\n        'aria-controls': state.panel ? state.panelId : undefined,\n        onKeyDown: handleKeyDown,\n        onKeyUp: handleKeyUp,\n        onClick: handleClick,\n      }\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_BUTTON_TAG,\n    name: 'Popover.Button',\n  })\n})\n\n// ---\n\nlet DEFAULT_OVERLAY_TAG = 'div' as const\ninterface OverlayRenderPropArg {\n  open: boolean\n}\ntype OverlayPropsWeControl = 'id' | 'aria-hidden' | 'onClick'\n\nlet OverlayRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Overlay = forwardRefWithAs(function Overlay<\n  TTag extends ElementType = typeof DEFAULT_OVERLAY_TAG\n>(\n  props: Props<TTag, OverlayRenderPropArg, OverlayPropsWeControl> &\n    PropsForFeatures<typeof OverlayRenderFeatures>,\n  ref: Ref<HTMLDivElement>\n) {\n  let [{ popoverState }, dispatch] = usePopoverContext([Popover.name, Overlay.name].join('.'))\n  let overlayRef = useSyncRefs(ref)\n\n  let id = `headlessui-popover-overlay-${useId()}`\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return popoverState === PopoverStates.Open\n  })()\n\n  let handleClick = useCallback(\n    (event: ReactMouseEvent) => {\n      if (isDisabledReactIssue7711(event.currentTarget)) return event.preventDefault()\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    [dispatch]\n  )\n\n  let slot = useMemo<OverlayRenderPropArg>(() => ({ open: popoverState === PopoverStates.Open }), [\n    popoverState,\n  ])\n  let propsWeControl = {\n    ref: overlayRef,\n    id,\n    'aria-hidden': true,\n    onClick: handleClick,\n  }\n  let passthroughProps = props\n\n  return render({\n    props: { ...passthroughProps, ...propsWeControl },\n    slot,\n    defaultTag: DEFAULT_OVERLAY_TAG,\n    features: OverlayRenderFeatures,\n    visible,\n    name: 'Popover.Overlay',\n  })\n})\n\n// ---\n\nlet DEFAULT_PANEL_TAG = 'div' as const\ninterface PanelRenderPropArg {\n  open: boolean\n  close: (focusableElement?: HTMLElement | MutableRefObject<HTMLElement | null>) => void\n}\ntype PanelPropsWeControl = 'id' | 'onKeyDown'\n\nlet PanelRenderFeatures = Features.RenderStrategy | Features.Static\n\nlet Panel = forwardRefWithAs(function Panel<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, PanelRenderPropArg, PanelPropsWeControl> &\n    PropsForFeatures<typeof PanelRenderFeatures> & {\n      focus?: boolean\n    },\n  ref: Ref<HTMLDivElement>\n) {\n  let { focus = false, ...passthroughProps } = props\n\n  let [state, dispatch] = usePopoverContext([Popover.name, Panel.name].join('.'))\n  let { close } = usePopoverAPIContext([Popover.name, Panel.name].join('.'))\n\n  let internalPanelRef = useRef<HTMLDivElement | null>(null)\n  let panelRef = useSyncRefs(internalPanelRef, ref, panel => {\n    dispatch({ type: ActionTypes.SetPanel, panel })\n  })\n\n  let usesOpenClosedState = useOpenClosed()\n  let visible = (() => {\n    if (usesOpenClosedState !== null) {\n      return usesOpenClosedState === State.Open\n    }\n\n    return state.popoverState === PopoverStates.Open\n  })()\n\n  let handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      switch (event.key) {\n        case Keys.Escape:\n          if (state.popoverState !== PopoverStates.Open) return\n          if (!internalPanelRef.current) return\n          if (!internalPanelRef.current.contains(document.activeElement)) return\n          event.preventDefault()\n          event.stopPropagation()\n          dispatch({ type: ActionTypes.ClosePopover })\n          state.button?.focus()\n          break\n      }\n    },\n    [state, internalPanelRef, dispatch]\n  )\n\n  // Unlink on \"unmount\" myself\n  useEffect(() => () => dispatch({ type: ActionTypes.SetPanel, panel: null }), [dispatch])\n\n  // Unlink on \"unmount\" children\n  useEffect(() => {\n    if (props.static) return\n\n    if (state.popoverState === PopoverStates.Closed && (props.unmount ?? true)) {\n      dispatch({ type: ActionTypes.SetPanel, panel: null })\n    }\n  }, [state.popoverState, props.unmount, props.static, dispatch])\n\n  // Move focus within panel\n  useEffect(() => {\n    if (!focus) return\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n\n    let activeElement = document.activeElement as HTMLElement\n    if (internalPanelRef.current.contains(activeElement)) return // Already focused within Dialog\n\n    focusIn(internalPanelRef.current, Focus.First)\n  }, [focus, internalPanelRef, state.popoverState])\n\n  // Handle Tab / Shift+Tab focus positioning\n  useWindowEvent('keydown', event => {\n    if (state.popoverState !== PopoverStates.Open) return\n    if (!internalPanelRef.current) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (!internalPanelRef.current) return\n    if (!internalPanelRef.current.contains(document.activeElement)) return\n\n    // We will take-over the default tab behaviour so that we have a bit\n    // control over what is focused next. It will behave exactly the same,\n    // but it will also \"fix\" some issues based on whether you are using a\n    // Portal or not.\n    event.preventDefault()\n\n    let result = focusIn(internalPanelRef.current, event.shiftKey ? Focus.Previous : Focus.Next)\n\n    if (result === FocusResult.Underflow) {\n      return state.button?.focus()\n    } else if (result === FocusResult.Overflow) {\n      if (!state.button) return\n\n      let elements = getFocusableElements()\n      let buttonIdx = elements.indexOf(state.button)\n\n      let nextElements = elements\n        .splice(buttonIdx + 1) // Elements after button\n        .filter(element => !internalPanelRef.current?.contains(element)) // Ignore items in panel\n\n      // Try to focus the next element, however it could fail if we are in a\n      // Portal that happens to be the very last one in the DOM. In that\n      // case we would Error (because nothing after the button is\n      // focusable). Therefore we will try and focus the very first item in\n      // the document.body.\n      if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n        focusIn(document.body, Focus.First)\n      }\n    }\n  })\n\n  // Handle focus out when we are in special \"focus\" mode\n  useWindowEvent(\n    'focus',\n    () => {\n      if (!focus) return\n      if (state.popoverState !== PopoverStates.Open) return\n      if (!internalPanelRef.current) return\n\n      if (internalPanelRef.current?.contains(document.activeElement as HTMLElement)) return\n      dispatch({ type: ActionTypes.ClosePopover })\n    },\n    true\n  )\n\n  let slot = useMemo<PanelRenderPropArg>(\n    () => ({ open: state.popoverState === PopoverStates.Open, close }),\n    [state, close]\n  )\n  let propsWeControl = {\n    ref: panelRef,\n    id: state.panelId,\n    onKeyDown: handleKeyDown,\n  }\n\n  return (\n    <PopoverPanelContext.Provider value={state.panelId}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_PANEL_TAG,\n        features: PanelRenderFeatures,\n        visible,\n        name: 'Popover.Panel',\n      })}\n    </PopoverPanelContext.Provider>\n  )\n})\n\n// ---\n\nlet DEFAULT_GROUP_TAG = 'div' as const\ninterface GroupRenderPropArg {}\ntype GroupPropsWeControl = 'id'\n\nfunction Group<TTag extends ElementType = typeof DEFAULT_PANEL_TAG>(\n  props: Props<TTag, GroupRenderPropArg, GroupPropsWeControl>\n) {\n  let groupRef = useRef<HTMLElement | null>(null)\n  let [popovers, setPopovers] = useState<PopoverRegisterBag[]>([])\n\n  let unregisterPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => {\n        let idx = existing.indexOf(registerbag)\n        if (idx !== -1) {\n          let clone = existing.slice()\n          clone.splice(idx, 1)\n          return clone\n        }\n        return existing\n      })\n    },\n    [setPopovers]\n  )\n\n  let registerPopover = useCallback(\n    (registerbag: PopoverRegisterBag) => {\n      setPopovers(existing => [...existing, registerbag])\n      return () => unregisterPopover(registerbag)\n    },\n    [setPopovers, unregisterPopover]\n  )\n\n  let isFocusWithinPopoverGroup = useCallback(() => {\n    let element = document.activeElement as HTMLElement\n\n    if (groupRef.current?.contains(element)) return true\n\n    // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n    return popovers.some(bag => {\n      return (\n        document.getElementById(bag.buttonId)?.contains(element) ||\n        document.getElementById(bag.panelId)?.contains(element)\n      )\n    })\n  }, [groupRef, popovers])\n\n  let closeOthers = useCallback(\n    (buttonId: string) => {\n      for (let popover of popovers) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    },\n    [popovers]\n  )\n\n  let contextBag = useMemo<ContextType<typeof PopoverGroupContext>>(\n    () => ({\n      registerPopover: registerPopover,\n      unregisterPopover: unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    }),\n    [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]\n  )\n\n  let slot = useMemo<GroupRenderPropArg>(() => ({}), [])\n  let propsWeControl = { ref: groupRef }\n  let passthroughProps = props\n\n  return (\n    <PopoverGroupContext.Provider value={contextBag}>\n      {render({\n        props: { ...passthroughProps, ...propsWeControl },\n        slot,\n        defaultTag: DEFAULT_GROUP_TAG,\n        name: 'Popover.Group',\n      })}\n    </PopoverGroupContext.Provider>\n  )\n}\n\n// ---\n\nPopover.Button = Button\nPopover.Overlay = Overlay\nPopover.Panel = Panel\nPopover.Group = Group\n","import { useState, MutableRefObject } from 'react'\n\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\n\nfunction resolveType<TTag>(props: { type?: string; as?: TTag }) {\n  if (props.type) return props.type\n\n  let tag = props.as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType<TTag>(\n  props: { type?: string; as?: TTag },\n  ref: MutableRefObject<HTMLElement | null>\n) {\n  let [type, setType] = useState(() => resolveType(props))\n\n  useIsoMorphicEffect(() => {\n    setType(resolveType(props))\n  }, [props.type, props.as])\n\n  useIsoMorphicEffect(() => {\n    if (type) return\n    if (!ref.current) return\n\n    if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute('type')) {\n      setType('button')\n    }\n  }, [type, ref])\n\n  return type\n}\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falsy we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => {\n      done(Reason.Finished)\n    }, durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import React, {\n  Fragment,\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n\n  // Types\n  ElementType,\n  MutableRefObject,\n} from 'react'\nimport { Props } from '../../types'\n\nimport { useId } from '../../hooks/use-id'\nimport { useIsInitialRender } from '../../hooks/use-is-initial-render'\nimport { match } from '../../utils/match'\nimport { useIsMounted } from '../../hooks/use-is-mounted'\nimport { useIsoMorphicEffect } from '../../hooks/use-iso-morphic-effect'\n\nimport { Features, PropsForFeatures, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { OpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useServerHandoffComplete } from '../../hooks/use-server-handoff-complete'\n\ntype ID = ReturnType<typeof useId>\n\nfunction useSplitClasses(classes: string = '') {\n  return useMemo(() => classes.split(' ').filter(className => className.trim().length > 1), [\n    classes,\n  ])\n}\n\ninterface TransitionContextValues {\n  show: boolean\n  appear: boolean\n  initial: boolean\n}\nlet TransitionContext = createContext<TransitionContextValues | null>(null)\nTransitionContext.displayName = 'TransitionContext'\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nexport interface TransitionClasses {\n  enter?: string\n  enterFrom?: string\n  enterTo?: string\n  entered?: string\n  leave?: string\n  leaveFrom?: string\n  leaveTo?: string\n}\n\nexport interface TransitionEvents {\n  beforeEnter?: () => void\n  afterEnter?: () => void\n  beforeLeave?: () => void\n  afterLeave?: () => void\n}\n\ntype TransitionChildProps<TTag> = Props<TTag, TransitionChildRenderPropArg> &\n  PropsForFeatures<typeof TransitionChildRenderFeatures> &\n  TransitionClasses &\n  TransitionEvents & { appear?: boolean }\n\nfunction useTransitionContext() {\n  let context = useContext(TransitionContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = useContext(NestingContext)\n\n  if (context === null) {\n    throw new Error(\n      'A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.'\n    )\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: MutableRefObject<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = createContext<NestingContextValues | null>(null)\nNestingContext.displayName = 'NestingContext'\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.current.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let doneRef = useRef(done)\n  let transitionableChildren = useRef<NestingContextValues['children']['current']>([])\n  let mounted = useIsMounted()\n\n  useEffect(() => {\n    doneRef.current = done\n  }, [done])\n\n  let unregister = useCallback(\n    (childId: ID, strategy = RenderStrategy.Hidden) => {\n      let idx = transitionableChildren.current.findIndex(({ id }) => id === childId)\n      if (idx === -1) return\n\n      match(strategy, {\n        [RenderStrategy.Unmount]() {\n          transitionableChildren.current.splice(idx, 1)\n        },\n        [RenderStrategy.Hidden]() {\n          transitionableChildren.current[idx].state = TreeStates.Hidden\n        },\n      })\n\n      if (!hasChildren(transitionableChildren) && mounted.current) {\n        doneRef.current?.()\n      }\n    },\n    [doneRef, mounted, transitionableChildren]\n  )\n\n  let register = useCallback(\n    (childId: ID) => {\n      let child = transitionableChildren.current.find(({ id }) => id === childId)\n      if (!child) {\n        transitionableChildren.current.push({ id: childId, state: TreeStates.Visible })\n      } else if (child.state !== TreeStates.Visible) {\n        child.state = TreeStates.Visible\n      }\n\n      return () => unregister(childId, RenderStrategy.Unmount)\n    },\n    [transitionableChildren, unregister]\n  )\n\n  return useMemo(\n    () => ({\n      children: transitionableChildren,\n      register,\n      unregister,\n    }),\n    [register, unregister, transitionableChildren]\n  )\n}\n\nfunction noop() {}\nlet eventNames = ['beforeEnter', 'afterEnter', 'beforeLeave', 'afterLeave'] as const\nfunction ensureEventHooksExist(events: TransitionEvents) {\n  let result = {} as Record<keyof typeof events, () => void>\n  for (let name of eventNames) {\n    result[name] = events[name] ?? noop\n  }\n  return result\n}\n\nfunction useEvents(events: TransitionEvents) {\n  let eventsRef = useRef(ensureEventHooksExist(events))\n\n  useEffect(() => {\n    eventsRef.current = ensureEventHooksExist(events)\n  }, [events])\n\n  return eventsRef\n}\n\n// ---\n\nlet DEFAULT_TRANSITION_CHILD_TAG = 'div' as const\ntype TransitionChildRenderPropArg = MutableRefObject<HTMLDivElement>\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nfunction TransitionChild<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let {\n    // Event \"handlers\"\n    beforeEnter,\n    afterEnter,\n    beforeLeave,\n    afterLeave,\n\n    // Class names\n    enter,\n    enterFrom,\n    enterTo,\n    entered,\n    leave,\n    leaveFrom,\n    leaveTo,\n\n    // @ts-expect-error\n    ...rest\n  } = props as typeof props\n  let container = useRef<HTMLElement | null>(null)\n  let [state, setState] = useState(TreeStates.Visible)\n  let strategy = rest.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n  let { show, appear, initial } = useTransitionContext()\n  let { register, unregister } = useParentNesting()\n\n  let id = useId()\n\n  let isTransitioning = useRef(false)\n\n  let nesting = useNesting(() => {\n    // When all children have been unmounted we can only hide ourselves if and only if we are not\n    // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n    if (!isTransitioning.current) {\n      setState(TreeStates.Hidden)\n      unregister(id)\n      events.current.afterLeave()\n    }\n  })\n\n  useIsoMorphicEffect(() => {\n    if (!id) return\n    return register(id)\n  }, [register, id])\n\n  useIsoMorphicEffect(() => {\n    // If we are in another mode than the Hidden mode then ignore\n    if (strategy !== RenderStrategy.Hidden) return\n    if (!id) return\n\n    // Make sure that we are visible\n    if (show && state !== TreeStates.Visible) {\n      setState(TreeStates.Visible)\n      return\n    }\n\n    match(state, {\n      [TreeStates.Hidden]: () => unregister(id),\n      [TreeStates.Visible]: () => register(id),\n    })\n  }, [state, id, register, unregister, show, strategy])\n\n  let enterClasses = useSplitClasses(enter)\n  let enterFromClasses = useSplitClasses(enterFrom)\n  let enterToClasses = useSplitClasses(enterTo)\n\n  let enteredClasses = useSplitClasses(entered)\n\n  let leaveClasses = useSplitClasses(leave)\n  let leaveFromClasses = useSplitClasses(leaveFrom)\n  let leaveToClasses = useSplitClasses(leaveTo)\n\n  let events = useEvents({ beforeEnter, afterEnter, beforeLeave, afterLeave })\n\n  let ready = useServerHandoffComplete()\n\n  useEffect(() => {\n    if (ready && state === TreeStates.Visible && container.current === null) {\n      throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n    }\n  }, [container, state, ready])\n\n  // Skipping initial transition\n  let skip = initial && !appear\n\n  useIsoMorphicEffect(() => {\n    let node = container.current\n    if (!node) return\n    if (skip) return\n\n    isTransitioning.current = true\n\n    if (show) events.current.beforeEnter()\n    if (!show) events.current.beforeLeave()\n\n    return show\n      ? transition(node, enterClasses, enterFromClasses, enterToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n          if (reason === Reason.Finished) events.current.afterEnter()\n        })\n      : transition(node, leaveClasses, leaveFromClasses, leaveToClasses, enteredClasses, reason => {\n          isTransitioning.current = false\n\n          if (reason !== Reason.Finished) return\n\n          // When we don't have children anymore we can safely unregister from the parent and hide\n          // ourselves.\n          if (!hasChildren(nesting)) {\n            setState(TreeStates.Hidden)\n            unregister(id)\n            events.current.afterLeave()\n          }\n        })\n  }, [\n    events,\n    id,\n    isTransitioning,\n    unregister,\n    nesting,\n    container,\n    skip,\n    show,\n    enterClasses,\n    enterFromClasses,\n    enterToClasses,\n    leaveClasses,\n    leaveFromClasses,\n    leaveToClasses,\n  ])\n\n  let propsWeControl = { ref: container }\n  let passthroughProps = rest\n\n  return (\n    <NestingContext.Provider value={nesting}>\n      <OpenClosedProvider\n        value={match(state, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })}\n      >\n        {render({\n          props: { ...passthroughProps, ...propsWeControl },\n          defaultTag: DEFAULT_TRANSITION_CHILD_TAG,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition.Child',\n        })}\n      </OpenClosedProvider>\n    </NestingContext.Provider>\n  )\n}\n\nexport function Transition<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag> & { show?: boolean; appear?: boolean }\n) {\n  // @ts-expect-error\n  let { show, appear = false, unmount, ...passthroughProps } = props as typeof props\n\n  let usesOpenClosedState = useOpenClosed()\n\n  if (show === undefined && usesOpenClosedState !== null) {\n    show = match(usesOpenClosedState, {\n      [State.Open]: true,\n      [State.Closed]: false,\n    })\n  }\n\n  if (![true, false].includes((show as unknown) as boolean)) {\n    throw new Error('A <Transition /> is used but it is missing a `show={true | false}` prop.')\n  }\n\n  let [state, setState] = useState(show ? TreeStates.Visible : TreeStates.Hidden)\n\n  let nestingBag = useNesting(() => {\n    setState(TreeStates.Hidden)\n  })\n\n  let initial = useIsInitialRender()\n  let transitionBag = useMemo<TransitionContextValues>(\n    () => ({ show: show as boolean, appear: appear || !initial, initial }),\n    [show, appear, initial]\n  )\n\n  useEffect(() => {\n    if (show) {\n      setState(TreeStates.Visible)\n    } else if (!hasChildren(nestingBag)) {\n      setState(TreeStates.Hidden)\n    }\n  }, [show, nestingBag])\n\n  let sharedProps = { unmount }\n\n  return (\n    <NestingContext.Provider value={nestingBag}>\n      <TransitionContext.Provider value={transitionBag}>\n        {render({\n          props: {\n            ...sharedProps,\n            as: Fragment,\n            children: <TransitionChild {...sharedProps} {...passthroughProps} />,\n          },\n          defaultTag: Fragment,\n          features: TransitionChildRenderFeatures,\n          visible: state === TreeStates.Visible,\n          name: 'Transition',\n        })}\n      </TransitionContext.Provider>\n    </NestingContext.Provider>\n  )\n}\n\nTransition.Child = function Child<TTag extends ElementType = typeof DEFAULT_TRANSITION_CHILD_TAG>(\n  props: TransitionChildProps<TTag>\n) {\n  let hasTransitionContext = useContext(TransitionContext) !== null\n  let hasOpenClosedContext = useOpenClosed() !== null\n\n  return !hasTransitionContext && hasOpenClosedContext ? (\n    <Transition {...props} />\n  ) : (\n    <TransitionChild {...props} />\n  )\n}\nTransition.Root = Transition\n","import { useRef, useEffect } from 'react'\n\nexport function useIsMounted() {\n  let mounted = useRef(false)\n\n  useEffect(() => {\n    mounted.current = true\n\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return mounted\n}\n","import { useRef, useEffect } from 'react'\n\nexport function useIsInitialRender() {\n  let initial = useRef(true)\n\n  useEffect(() => {\n    initial.current = false\n  }, [])\n\n  return initial.current\n}\n","import { useState } from 'react'\nimport { useIsoMorphicEffect } from './use-iso-morphic-effect'\nimport { useServerHandoffComplete } from './use-server-handoff-complete'\n\n// We used a \"simple\" approach first which worked for SSR and rehydration on the client. However we\n// didn't take care of the Suspense case. To fix this we used the approach the @reach-ui/auto-id\n// uses.\n//\n// Credits: https://github.com/reach/reach-ui/blob/develop/packages/auto-id/src/index.tsx\n\nlet id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  let ready = useServerHandoffComplete()\n  let [id, setId] = useState(ready ? generateId : null)\n\n  useIsoMorphicEffect(() => {\n    if (id === null) setId(generateId())\n  }, [id])\n\n  return id != null ? '' + id : undefined\n}\n","import { useLayoutEffect, useEffect } from 'react'\n\nexport const useIsoMorphicEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n","import { useState, useEffect } from 'react'\n\nlet state = { serverHandoffComplete: false }\n\nexport function useServerHandoffComplete() {\n  let [serverHandoffComplete, setServerHandoffComplete] = useState(state.serverHandoffComplete)\n\n  useEffect(() => {\n    if (serverHandoffComplete === true) return\n\n    setServerHandoffComplete(true)\n  }, [serverHandoffComplete])\n\n  useEffect(() => {\n    if (state.serverHandoffComplete === false) state.serverHandoffComplete = true\n  }, [])\n\n  return serverHandoffComplete\n}\n","import React, {\n  createContext,\n  useContext,\n\n  // Types\n  ReactNode,\n  ReactElement,\n} from 'react'\n\nlet Context = createContext<State | null>(null)\nContext.displayName = 'OpenClosedContext'\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function useOpenClosed() {\n  return useContext(Context)\n}\n\ninterface Props {\n  value: State\n  children: ReactNode\n}\n\nexport function OpenClosedProvider({ value, children }: Props): ReactElement {\n  return <Context.Provider value={value}>{children}</Context.Provider>\n}\n","export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import {\n  Fragment,\n  cloneElement,\n  createElement,\n  forwardRef,\n  isValidElement,\n\n  // Types\n  ElementType,\n  ReactElement,\n} from 'react'\nimport { Props, XOR, __, Expand } from '../types'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\ntype PropsForFeature<TPassedInFeatures extends Features, TForFeature extends Features, TProps> = {\n  [P in TPassedInFeatures]: P extends TForFeature ? TProps : __\n}[TPassedInFeatures]\n\nexport type PropsForFeatures<T extends Features> = XOR<\n  PropsForFeature<T, Features.Static, { static?: boolean }>,\n  PropsForFeature<T, Features.RenderStrategy, { unmount?: boolean }>\n>\n\nexport function render<TFeature extends Features, TTag extends ElementType, TSlot>({\n  props,\n  slot,\n  defaultTag,\n  features,\n  visible = true,\n  name,\n}: {\n  props: Expand<Props<TTag, TSlot, any> & PropsForFeatures<TFeature>>\n  slot?: TSlot\n  defaultTag: ElementType\n  features?: TFeature\n  visible?: boolean\n  name: string\n}) {\n  // Visible always render\n  if (visible) return _render(props, slot, defaultTag, name)\n\n  let featureFlags = features ?? Features.None\n\n  if (featureFlags & Features.Static) {\n    let { static: isStatic = false, ...rest } = props as PropsForFeatures<Features.Static>\n\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (isStatic) return _render(rest, slot, defaultTag, name)\n  }\n\n  if (featureFlags & Features.RenderStrategy) {\n    let { unmount = true, ...rest } = props as PropsForFeatures<Features.RenderStrategy>\n    let strategy = unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render(\n          { ...rest, ...{ hidden: true, style: { display: 'none' } } },\n          slot,\n          defaultTag,\n          name\n        )\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(props, slot, defaultTag, name)\n}\n\nfunction _render<TTag extends ElementType, TSlot>(\n  props: Props<TTag, TSlot> & { ref?: unknown },\n  slot: TSlot = {} as TSlot,\n  tag: ElementType,\n  name: string\n) {\n  let { as: Component = tag, children, refName = 'ref', ...passThroughProps } = omit(props, [\n    'unmount',\n    'static',\n  ])\n\n  // This allows us to use `<HeadlessUIComponent as={MyComponent} refName=\"innerRef\" />`\n  let refRelatedProps = props.ref !== undefined ? { [refName]: props.ref } : {}\n\n  let resolvedChildren = (typeof children === 'function' ? children(slot) : children) as\n    | ReactElement\n    | ReactElement[]\n\n  // Allow for className to be a function with the slot as the contents\n  if (passThroughProps.className && typeof passThroughProps.className === 'function') {\n    ;(passThroughProps as any).className = passThroughProps.className(slot)\n  }\n\n  if (Component === Fragment) {\n    if (Object.keys(passThroughProps).length > 0) {\n      if (\n        !isValidElement(resolvedChildren) ||\n        (Array.isArray(resolvedChildren) && resolvedChildren.length > 1)\n      ) {\n        throw new Error(\n          [\n            'Passing props on \"Fragment\"!',\n            '',\n            `The current component <${name} /> is rendering a \"Fragment\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"Fragment\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneElement(\n        resolvedChildren,\n        Object.assign(\n          {},\n          // Filter out undefined values so that they don't override the existing values\n          mergeEventFunctions(compact(omit(passThroughProps, ['ref'])), resolvedChildren.props, [\n            'onClick',\n          ]),\n          refRelatedProps\n        )\n      )\n    }\n  }\n\n  return createElement(\n    Component,\n    Object.assign({}, omit(passThroughProps, ['ref']), Component !== Fragment && refRelatedProps),\n    resolvedChildren\n  )\n}\n\n/**\n * We can use this function for the following useCase:\n *\n * <Menu.Item> <button onClick={console.log} /> </Menu.Item>\n *\n * Our `Menu.Item` will have an internal `onClick`, if you passthrough an `onClick` to the actual\n * `Menu.Item` component we will call it correctly. However, when we have an `onClick` on the actual\n * first child, that one should _also_ be called (but before this implementation, it was just\n * overriding the `onClick`). But it is only when we *render* that we have access to the existing\n * props of this component.\n *\n * It's a bit hacky, and not that clean, but it is something internal and we have tests to rely on\n * so that we can refactor this later (if needed).\n */\nfunction mergeEventFunctions(\n  passThroughProps: Record<string, any>,\n  existingProps: Record<string, any>,\n  functionsToMerge: string[]\n) {\n  let clone = Object.assign({}, passThroughProps)\n  for (let func of functionsToMerge) {\n    if (passThroughProps[func] !== undefined && existingProps[func] !== undefined) {\n      Object.assign(clone, {\n        [func](event: { defaultPrevented: boolean }) {\n          // Props we control\n          if (!event.defaultPrevented) passThroughProps[func](event)\n\n          // Existing props on the component\n          if (!event.defaultPrevented) existingProps[func](event)\n        },\n      })\n    }\n  }\n\n  return clone\n}\n\n/**\n * This is a hack, but basically we want to keep the full 'API' of the component, but we do want to\n * wrap it in a forwardRef so that we _can_ passthrough the ref\n */\nexport function forwardRefWithAs<T extends { name: string; displayName?: string }>(\n  component: T\n): T & { displayName: string } {\n  return Object.assign(forwardRef((component as unknown) as any) as any, {\n    displayName: component.displayName ?? component.name,\n  })\n}\n\nfunction compact<T extends Record<any, any>>(object: T) {\n  let clone = Object.assign({}, object)\n  for (let key in clone) {\n    if (clone[key] === undefined) delete clone[key]\n  }\n  return clone\n}\n\nfunction omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n","import * as React from \"react\";\n\nfunction MenuIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M4 6h16M4 12h16M4 18h16\"\n  }));\n}\n\nexport default MenuIcon;","import * as React from \"react\";\n\nfunction XIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    d: \"M6 18L18 6M6 6l12 12\"\n  }));\n}\n\nexport default XIcon;"],"names":["Keys","useSyncRefs","refs","cache","useRef","useEffect","current","useCallback","value","ref","isDisabledReactIssue7711","element","parent","parentElement","legend","HTMLFieldSetElement","HTMLLegendElement","isParentDisabled","getAttribute","previous","previousElementSibling","isFirstLegend","Focus","FocusResult","Direction","FocusableMode","focusableSelector","map","selector","join","getFocusableElements","container","document","body","Array","from","querySelectorAll","focusIn","focus","elements","isArray","slice","sort","a","b","position","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","active","activeElement","direction","First","Next","Previous","Last","Error","startIndex","Math","max","indexOf","length","focusOptions","NoScroll","preventScroll","offset","total","next","undefined","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","useWindowEvent","type","listener","options","listenerRef","handler","event","call","window","addEventListener","removeEventListener","PopoverStates","ActionTypes","resolveType","props","tag","as","toLowerCase","reducers","TogglePopover","state","popoverState","match","Open","Closed","ClosePopover","SetButton","action","button","SetButtonId","buttonId","SetPanel","panel","SetPanelId","panelId","PopoverContext","createContext","usePopoverContext","component","context","useContext","err","Popover","name","captureStackTrace","displayName","PopoverAPIContext","usePopoverAPIContext","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","stateReducer","useId","reducerBag","useReducer","dispatch","registerBag","useMemo","close","groupContext","registerPopover","isFocusWithinPopoverGroup","contains","target","mode","Strict","matches","Loose","isFocusableElement","preventDefault","focusableElement","restoreElement","HTMLElement","api","slot","open","React","Provider","OpenClosedProvider","State","render","defaultTag","Button","forwardRefWithAs","internalButtonRef","closeOthers","panelContext","isWithinPanel","buttonRef","withinPanelButtonRef","activeElementRef","previousActiveElementRef","handleKeyDown","key","Space","Enter","stopPropagation","Escape","Tab","shiftKey","_state$button2","focusableElements","previousIdx","handleKeyUp","_state$button3","handleClick","currentTarget","disabled","useState","setType","useIsoMorphicEffect","HTMLButtonElement","useResolveButtonType","passthroughProps","propsWeControl","onKeyDown","onClick","id","onKeyUp","OverlayRenderFeatures","Features","Overlay","overlayRef","usesOpenClosedState","useOpenClosed","visible","features","PanelRenderFeatures","Panel","_props$focus","internalPanelRef","panelRef","unmount","result","_state$button7","buttonIdx","splice","filter","_internalPanelRef$cur","_internalPanelRef$cur2","Group","groupRef","popovers","setPopovers","unregisterPopover","registerbag","existing","idx","clone","_groupRef$current","some","bag","getElementById","_document$getElementB2","popover","contextBag","Reason","disposables","requestAnimationFrame","raf","add","cancelAnimationFrame","nextFrame","args","setTimeout","timer","clearTimeout","cb","push","dispose","addClasses","node","classes","classList","removeClasses","remove","transition","base","to","entered","done","d","_done","called","once","getComputedStyle","transitionDuration","transitionDelay","split","Boolean","v","includes","parseFloat","z","resolvedValue","_value$split$filter$m2","durationMs","delaysMs","Finished","Cancelled","waitForTransition","reason","useSplitClasses","className","trim","TreeStates","TransitionContext","NestingContext","hasChildren","children","Visible","useNesting","doneRef","transitionableChildren","mounted","useIsMounted","unregister","childId","strategy","RenderStrategy","findIndex","Hidden","register","child","find","noop","eventNames","ensureEventHooksExist","events","TransitionChildRenderFeatures","TransitionChild","beforeEnter","afterEnter","beforeLeave","afterLeave","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","rest","setState","useTransitionContext","show","appear","initial","useParentNesting","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","eventsRef","useEvents","ready","useServerHandoffComplete","skip","Transition","_props$appear","nestingBag","useIsInitialRender","transitionBag","sharedProps","Fragment","Child","hasTransitionContext","hasOpenClosedContext","Root","generateId","setId","useLayoutEffect","serverHandoffComplete","setServerHandoffComplete","Context","lookup","returnValue","arguments","error","Object","keys","_ref$visible","_render","featureFlags","None","Static","isStatic","Unmount","hidden","style","display","omit","Component","refName","_omit$refName","passThroughProps","refRelatedProps","resolvedChildren","isValidElement","line","cloneElement","assign","existingProps","functionsToMerge","func","defaultPrevented","_loop","mergeEventFunctions","object","compact","createElement","forwardRef","keysToOmit","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth"],"sourceRoot":""}