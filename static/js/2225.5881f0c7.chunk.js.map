{"version":3,"file":"static/js/2225.5881f0c7.chunk.js","mappings":"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","sources":["components/common/CustomCInputGroup.js","views/accounts/branch-secratary/AddBSUserAccountPage.js"],"sourcesContent":["import React from \"react\";\n\nimport {\n  CFormFeedback,\n  CFormLabel,\n  CFormInput,\n  CFormTextarea,\n  CCol,\n  CFormSelect,\n  CInputGroup,\n  CButton,\n} from \"@coreui/react\";\n\nimport CIcon from \"@coreui/icons-react\";\nimport { cilPlus } from \"@coreui/icons\";\n\n// Custom form input group component\nexport function CustomCFormInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\n// Custom form input with add button group component\nexport function CustomCFormAddInputGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n  onAddInputBtnPressed,\n  addListName,\n  addBtnLabel = \"Add\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CInputGroup>\n          <CFormInput\n            type={type}\n            className={`!bg-white ${inputClassName}`}\n            readOnly={readOnly}\n            id={name}\n            name={name}\n            onChange={onChange}\n            // required={required}\n            invalid={error ? true : false}\n            placeholder={placeholder}\n            multiple={multiple}\n            aria-describedby=\"button-addon2\"\n          />\n          <CButton\n            name={addListName}\n            type=\"button\"\n            color=\"secondary\"\n            variant=\"outline\"\n            id=\"button-addon2\"\n            onClick={onAddInputBtnPressed}\n          >\n            {/* <CIcon icon={cilPlus} size=\"sm\" className=\"mx-1\"/> */}\n            {addBtnLabel}\n          </CButton>\n        </CInputGroup>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormTextAreaGroup({\n  label,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"text\",\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormTextarea\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          value={value}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          rows=\"4\"\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormFilesGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  readOnly = false,\n  mdSize = 12,\n  type = \"file\",\n  required = true,\n  multiple = true,\n  uppercase = false,\n  inputClassName = \"\",\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormInput\n          type={type}\n          className={`!bg-white ${inputClassName}`}\n          readOnly={readOnly}\n          id={name}\n          name={name}\n          onChange={onChange}\n          // required={required}\n          invalid={error ? true : false}\n          placeholder={placeholder}\n          multiple={multiple}\n        />\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n\nexport function CustomCFormSelectGroup({\n  label,\n  name,\n  placeholder,\n  onChange,\n  error,\n  mdSize = 12,\n  required = true,\n  uppercase = false,\n  inputClassName = \"\",\n  options,\n  value,\n  defaultValue,\n}) {\n  return (\n    <>\n      <CCol className=\"mb-3\" xs={12} md={mdSize}>\n        <CFormLabel\n          htmlFor={name}\n          className={uppercase ? \"uppercase\" : \"\"}\n        >{`${label}${required ? \"*\" : \"\"}`}</CFormLabel>\n        <CFormSelect\n           className={`!bg-white ${inputClassName}`}\n          name={name}\n          defaultValue={defaultValue}\n          onChange={onChange}\n          aria-label=\"Default select example\"\n          invalid={error ? true : false}\n        >\n          <option>Open this select menu</option>\n          {options.map((option, index) => (\n            <option key={index} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </CFormSelect>\n        <CFormFeedback invalid>{error}</CFormFeedback>\n      </CCol>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Joi from \"joi\";\n\nimport {\n  CustomCFormInputGroup,\n  CustomCFormSelectGroup,\n} from \"src/components/common/CustomCInputGroup\";\n\nimport { CButton } from \"@coreui/react\";\n\nconst AddBSUserAccountPage = () => {\n  const [formData, setFormData] = useState(initialValue);\n  const [formErrors, setFormErrors] = useState({});\n\n  // Joi schema\n  const schema = Joi.object({\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n    email: Joi.string()\n      .email({ tlds: { allow: false } })\n      .required()\n      .label(\"Email\"),\n    contactNo: Joi.string().required().label(\"Contact Number\"),\n    NIC: Joi.string().required().label(\"NIC\"),\n    branchName: Joi.string().required().label(\"Branch Name\"),\n    accountType: Joi.string().required().label(\"Access Level\"),\n    confirmPassword: Joi.ref(\"password\"),\n  });\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (name === \"images\") {\n      setFormData({ ...formData, [name]: files });\n    } else {\n      delete formErrors[name];\n      setFormData({ ...formData, [name]: value });\n    }\n  };\n\n  const handleSubmit = (e) => {\n    const { error, value } = schema.validate(formData, { abortEarly: false });\n    if (!error) {\n      e.preventDefault();\n      toast.success(\"Successfully Added\");\n      return;\n    } else {\n      const errors = {};\n      for (let item of error.details) {\n        errors[item.path[0]] = item.message;\n      }\n      setFormErrors(errors);\n    }\n  };\n  return (\n    <>\n      <div className=\"shadow sm:rounded-lg bg-white p-4 mb-5 row g-3\">\n        {/* <h1 className=\"text-xl font-semibold mb-3\">Branch Ser</h1> */}\n        <div className=\"row g-3\">\n          <CustomCFormInputGroup\n            label=\"Name\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n            error={formErrors.name}\n            uppercase={true}\n          />\n          <CustomCFormInputGroup\n            label=\"Email Address\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n            error={formErrors.email}\n            uppercase={true}\n            mdSize={6}\n          />\n          <CustomCFormInputGroup\n            label=\"Branch Name\"\n            name=\"branchName\"\n            value={formData.branchName}\n            onChange={handleChange}\n            error={formErrors.branchName}\n            uppercase={true}\n            mdSize={6}\n          />\n          <CustomCFormInputGroup\n            label=\"NIC\"\n            name=\"NIC\"\n            value={formData.NIC}\n            onChange={handleChange}\n            error={formErrors.NIC}\n            uppercase={true}\n            mdSize={6}\n          />\n          <CustomCFormInputGroup\n            label=\"Contact Number\"\n            name=\"contactNumber\"\n            value={formData.contactNumber}\n            onChange={handleChange}\n            error={formErrors.contactNumber}\n            uppercase={true}\n            mdSize={6}\n          />\n          <CustomCFormInputGroup\n            label=\"Username\"\n            name=\"username\"\n            value={formData.username}\n            onChange={handleChange}\n            error={formErrors.username}\n            uppercase={true}\n            mdSize={6}\n          />\n          <CustomCFormSelectGroup\n            label=\"Access Level\"\n            name=\"accountType\"\n            value={formData.accountType}\n            onChange={handleChange}\n            error={formErrors.accountType}\n            uppercase={true}\n            mdSize={6}\n            options={[\n              { value: \"bsEditor\", label: \"Editor\" },\n              { value: \"bsViewer\", label: \"Viewer\" },\n            ]}\n          />\n          <CustomCFormInputGroup\n            label=\"Password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            error={formErrors.password}\n            uppercase={true}\n            mdSize={6}\n            type=\"password\"\n          />\n          <CustomCFormInputGroup\n            label=\"Confirm Password\"\n            name=\"confirmPassword\"\n            value={formData.confirmPassword}\n            onChange={handleChange}\n            error={formErrors.confirmPassword}\n            uppercase={true}\n            mdSize={6}\n            type=\"password\"\n          />\n        </div>\n        <div className=\"grid justify-end\">\n          <CButton\n            color=\"primary\"\n            variant=\"outline\"\n            className=\"mr-2\"\n            onClick={handleSubmit}\n          >\n            {\" \"}\n            Submit{\" \"}\n          </CButton>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddBSUserAccountPage;\n\nconst initialValue = {\n  userName: \"\",\n  name: \"\",\n  email: \"\",\n  NIC: \"\",\n  contactNo: \"\",\n  accountType: \"\",\n  branchName: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n"],"names":["CustomCFormInputGroup","label","name","placeholder","value","onChange","error","readOnly","mdSize","type","required","multiple","uppercase","inputClassName","className","xs","md","htmlFor","id","invalid","CustomCFormAddInputGroup","onAddInputBtnPressed","addListName","addBtnLabel","color","variant","onClick","CustomCFormTextAreaGroup","rows","CustomCFormFilesGroup","CustomCFormSelectGroup","options","defaultValue","map","option","index","useState","initialValue","formData","setFormData","formErrors","setFormErrors","schema","Joi","username","password","email","tlds","allow","contactNo","NIC","branchName","accountType","confirmPassword","handleChange","e","target","files","contactNumber","validate","abortEarly","preventDefault","toast","errors","details","item","path","message","userName"],"sourceRoot":""}